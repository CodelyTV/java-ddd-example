version: '3'

services:
  mysql:
    container_name: codelytv-java_ddd_skeleton-mysql
    image: mysql:8
    ports:
      - "3360:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
    entrypoint:
      sh -c "
        echo 'CREATE DATABASE IF NOT EXISTS mooc;CREATE DATABASE IF NOT EXISTS backoffice;' > /docker-entrypoint-initdb.d/init.sql;
        /usr/local/bin/docker-entrypoint.sh --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
      "
    command: ["--default-authentication-plugin=mysql_native_password"]

  rabbitmq:
    container_name: codelytv-java_ddd_skeleton-rabbitmq
    image: 'rabbitmq:3.7-management'
    restart: unless-stopped
    ports:
      - 5630:5672
      - 8090:15672
    environment:
      - RABBITMQ_DEFAULT_USER=codelytv
      - RABBITMQ_DEFAULT_PASS=c0d3ly

  elasticsearch:
    container_name: codelytv-java_ddd_skeleton-elasticsearch
    image: 'elasticsearch:6.8.4'
    restart: unless-stopped
    ports:
      - 9300:9300
      - 9200:9200
    environment:
      - discovery.type=single-node

  java:
    container_name: codelytv-ddd_skeleton-java
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "8030:8080"
    volumes:
      - .:/app:delegated
    env_file:
      - .env
    tty: true
    depends_on:
      - mysql
      - rabbitmq
